{
  "name": "Flare_smart_contracts",
  "version": "0.0.1",
  "description": "Smart contracts implementing FTSO and FAsset on flare network.",
  "main": "",
  "repository": {
    "type": "git",
    "url": "git+https://gitlab.com/flarenetwork/flare_smart_contracts.git"
  },
  "author": "Flare SC team",
  "license": "MIT",
  "directories": {},
  "scripts": {
    "---------TEST---SCRIPTS": "", 
    "test": "yarn hardhat test",
    "test-with-coverage": "yarn hardhat coverage",
    "testHH": "yarn test_unit_hh && yarn test_integration_hh && yarn test_performance_hh",
    "test_unit_hh": "env TEST_PATH=./test/unit yarn hardhat test --network hardhat",
    "test_integration_hh": "env TEST_PATH=./test/integration yarn hardhat test --network hardhat",
    "test_system_scdev": "env TEST_PATH=./test/scdev/system yarn hardhat test --network scdev",
    "test_performance_hh": "env TEST_PATH=./test/performance yarn hardhat test --network hardhat",
    "test_timeshift": "env VM_FLARE_TEST=shift yarn hardhat test --network develop",
    "test_timeshift_help": "echo 'Run tests with time shifts in VM'",
    "test_timewait": "env VM_FLARE_TEST=real yarn hardhat test --network develop",
    "test_timewait_help": "echo 'Run tests with actual delays'",
    "---------DEPLOY---TEST---SCRIPTS": "",
    "test_deploy_local_scdev": "cat deploys/scdev.json | env CHAIN_CONFIG=ftso-mvp-test yarn hardhat test --network scdev ./test/scdev/deploy/deploy.ts",
    "test_deploy_local_ftsomvp": "cat deploys/ftsomvp.json | env CHAIN_CONFIG=ftso-mvp-test yarn hardhat test --network ftsomvp ./test/scdev/deploy/deploy.ts",
    "test_deploy_network_ftsomvp": "cat deploys/ftsoMvpNetwork.json | env CHAIN_CONFIG=ftso-mvp yarn hardhat test --network ftsoMvpNetwork ./test/scdev/deploy/deploy.ts",
    "test_deploy_develop": "cat deploys/develop.json | env CHAIN_CONFIG=ftso-mvp-test yarn hardhat test --network develop ./test/scdev/deploy/deploy.ts",
    "---------DEPLOY---SCRIPTS": "",
    "deploy_local_scdev": "yarn compile && x=$(env CHAIN_CONFIG=ftso-mvp-test yarn --silent hardhat run ./scripts/deploy-contracts.ts --network scdev) && echo $x > deploys/scdev.json && yarn test_deploy_scdev",
    "deploy_local_ftsomvp": "yarn compile && x=$(env CHAIN_CONFIG=ftso-mvp-test yarn --silent hardhat run ./scripts/deploy-contracts.ts --network ftsomvp) && echo $x > deploys/ftsomvp.json && yarn test_deploy_ftsomvp",
    "deploy_network_ftsomvp": "yarn compile && x=$(env CHAIN_CONFIG=ftso-mvp yarn --silent hardhat run ./scripts/deploy-contracts.ts --network ftsoMvpNetwork) && echo $x > deploys/ftsoMvpNetwork.json && yarn test_deploy_network_ftsomvp",
    "deploy_local_develop": "yarn compile && x=$(env CHAIN_CONFIG=ftso-mvp-test yarn --silent hardhat run ./scripts/deploy-contracts.ts --network develop) && echo $x > deploys/develop.json && yarn test_deploy_develop",
    "---------COMPILE---SCRIPTS": "",
    "compile": "yarn hardhat compile && yarn typechain-ethers-v5 && yarn typechain-truffle-v5",
    "c": "yarn compile",
    "lint": "yarn solhint 'contracts/**/*.sol'",
    "typechain-ethers-v5": "yarn typechain --target=ethers-v5 --outDir typechain \"artifacts/!(build-info)/**/+([a-zA-Z0-9_]).json\" 1> nul",
    "typechain-truffle-v5": "yarn typechain --target=truffle-v5 --outDir typechain-truffle \"artifacts/!(build-info)/**/+([a-zA-Z0-9_]).json\" 1> nul",
    "size": "yarn run hardhat size-contracts",
    "flatten": "yarn hardhat flatten",
    "---------INFO---SCRIPTS": "",  
    "gas-snapshot": "env CI=true yarn testHH ts-node scripts/process-gas-report.ts; cat .gas-report.txt",
    "gas": "cat .gas-report.txt",
    "---------HELPER---SCRIPTS": "",  
    "accounts": "ts-node scripts/generate-accounts.ts",
    "go-accounts": "ts-node ./scripts/generate-addresses-for-go.ts",
    "---------VM-(MULTIPASS)-MANGEMENT--SCRIPTS": "",  
    "vm_launch": "./scripts/local-flare-chain-vm/launch.sh",
    "vm_shell": "multipass shell flare",
    "vm_start": "multipass start flare",
    "vm_stop": "multipass stop flare",
    "vm_purge": "multipass delete flare; multipass purge"
  },
  "dependencies": {
    "@openzeppelin/contracts": "3.4.0",
    "dotenv": "8.2.0",
    "got": "11.8.2",
    "hardhat": "2.0.11",
    "solhint": "3.3.2",
    "solidity-coverage": "0.7.15"
  },
  "devDependencies": {
    "@gnosis.pm/mock-contract": "4.0.0",
    "@nomiclabs/hardhat-ethers": "2.0.2",
    "@nomiclabs/hardhat-truffle5": "2.0.0",
    "@nomiclabs/hardhat-waffle": "2.0.1",
    "@nomiclabs/hardhat-web3": "2.0.0",
    "@openzeppelin/contracts": "3.4.0",
    "@openzeppelin/test-helpers": "0.5.10",
    "@typechain/ethers-v5": "6.0.3",
    "@typechain/hardhat": "1.0.1",
    "@typechain/truffle-v5": "4.0.1",
    "@typechain/web3-v1": "2.2.0",
    "@types/chai": "4.2.15",
    "@types/mocha": "8.2.1",
    "@types/node": "14.14.31",
    "chai": "4.3.3",
    "ethereum-waffle": "3.3.0",
    "ethereumjs-wallet": "1.0.1",
    "ethers": "5.0.0",
    "hardhat-contract-sizer": "2.0.3",
    "hardhat-deploy": "0.7.4",
    "hardhat-gas-reporter": "1.0.4",
    "intercept-stdout": "0.1.2",
    "pascal-case": "3.1.2",
    "truffle-assertions": "0.9.2",
    "ts-generator": "0.1.1",
    "ts-node": "9.1.1",
    "typechain": "4.0.3",
    "typescript": "4.2.3"
  }
}
